#!/usr/bin/env python3

# It's expected that this file will be run from within the proj directory, if
# you run it from elsewhere things may break.
# (Why on earth are you running this tho?)

import json
from pathlib import Path

"""
Create a file /proj/xdl_types.json
Insert each type in a format similar to "TYPE": "Type String"

Create a script /proj/xdl_type_gen.py
Read in each key-value pair
Write out all the keys (Types) to datatype.hh as part of the existing enum
Write out all the values (Type Strings) to datatype.cc as part of the existing enum

Add execution of /proj/xdl_type_gen.py to CMake
Make sure build waits for /proj/error_gen.py to run and has all required types
"""


def main():
    with open("xdl_types.json", "r") as f:
        type_dict = json.load(f)

    names_file_path = Path(__file__).parents[1] / "src/util/datatype.cc"
    types_file_path = Path(__file__).parents[1] / "src/util/datatype.hh"

    with open(names_file_path, "w") as names, open(types_file_path, "w") as types:
        types.write(
            """\
// This file was generated by a python script.
// Do not edit this file... YOUR CHANGES WILL GET OVERWRITTEN...
// Edit proj/xdl_types.json instead.
#pragma once

/*
   The list of XDL types specific to this application.
 */
enum class DataType {\n"""
        )

        names.write(
            """\
// This file was generated by a python script.
// Do not edit this file... YOUR CHANGES WILL GET OVERWRITTEN...
// Edit proj/xdl_types.json instead.
#include "util/datatype.hh"
/*
   The list of XDL types specific to this application.
 */
const char* DataTypeNames = {\n"""
        )

        for type_name, name in type_dict.items():
            types.write(f"  {name},\n")
            names.write(f'    "{type_name}",\n')

        types.write("};")
        names.write("};")


if __name__ == "__main__":
    main()
